<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 通过默认构造器创建Bean -->
    <bean id="duke" class="com.cjp.Juggler"/>

    <!-- 通过构造器注入 -->
    <bean id="duke2" class="com.cjp.Juggler">
        <constructor-arg value="15"/>
    </bean>

    <!-- 通过构造器注入对象引用 -->
    <bean id="sonnet29" class="com.cjp.Sonnet29"/>
    <bean id="poeticDuke" class="com.cjp.PoeticJuggler">
        <constructor-arg value="15"/>
        <constructor-arg ref="sonnet29"/>
    </bean>

    <!-- 通过工厂方法创建Bean -->
    <bean id="theStage" class="com.cjp.Stage" factory-method="getInstance"/>

    <!-- 声明多例 -->
    <bean id="ticket" class="com.cjp.Ticket" scope="prototype"/>

    <!-- 初始化和销毁bean执行指定的方法 -->
    <bean id="auditorium" class="com.cjp.Auditorium" init-method="turnOnLights" destroy-method="turnOffLights"/>

    <!-- 注入Bean属性 -->
    <bean id="saxophone" class="com.cjp.Saxophone"/>
    <bean id="kenny" class="com.cjp.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="instrument" ref="saxophone"/>
    </bean>

    <!-- 注入Bean属性-内部bean -->
    <bean id="kenny2" class="com.cjp.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <property name="instrument">
            <bean class="com.cjp.Saxophone"/>
        </property>
    </bean>

    <!-- 注入Bean属性-使用Spring的命名空间p装配属性 -->
    <bean id="kenny3" class="com.cjp.Instrumentalist"
          p:song="Jingle Bells"
          p:instrument-ref="saxophone"/>

    <!-- 装配集合：List -->
    <bean id="guitar" class="com.cjp.Guitar"/>
    <bean id="cymbal" class="com.cjp.Cymbal"/>
    <bean id="hank" class="com.cjp.OneManBand">
        <property name="instruments">
            <list>
                <ref bean="saxophone"/>
                <ref bean="guitar"/>
                <ref bean="cymbal"/>
            </list>
        </property>
    </bean>

    <!-- 装配集合：Set -->
    <bean id="hank2" class="com.cjp.OneManBand">
        <property name="instruments">
            <set>
                <ref bean="saxophone"/>
                <ref bean="guitar"/>
                <ref bean="cymbal"/>
            </set>
        </property>
    </bean>

    <!-- 装配集合：Map -->
    <bean id="hank3" class="com.cjp.OneManBand2">
        <property name="instruments">
            <map>
                <entry key="saxophone" value-ref="saxophone"/>
                <entry key="guitar" value-ref="guitar"/>
                <entry key="cymbal" value-ref="cymbal"/>
            </map>
        </property>
    </bean>

    <!-- 装配集合：Properties -->
    <bean id="hank4" class="com.cjp.OneManBand3">
        <property name="instruments">
            <props>
                <prop key="saxophone">TOOT TOOT TOOT</prop>
                <prop key="guitar">STRUM STRUM STRUM</prop>
                <prop key="cymbal">CRASH CRASH CRASH</prop>
            </props>
        </property>
    </bean>

    <!-- 装配空值 -->
    <bean id="artist" class="com.cjp.Artist">
        <property name="name">
            <null/>
        </property>
    </bean>

    <!-- 使用SpEL表达式装配 -->
    <!-- 引用其他bean的属性 -->
    <bean id="carl" class="com.cjp.Instrumentalist">
        <property name="song" value="#{kenny.song}"/>
    </bean>

    <!-- 引用其他bean的方法 -->
    <bean id="songSelector" class="com.cjp.SongSelect"/>
    <bean id="carl2" class="com.cjp.Instrumentalist">
        <property name="song" value="#{songSelector.selectSong(1)}"/>
    </bean>

    <!-- 检查Null -->
    <bean id="carl3" class="com.cjp.Instrumentalist">
        <property name="song" value="#{songSelector.selectSong(1)?.toUpperCase()}"/>
    </bean>

    <!-- 操作类 -->
    <bean id="carl4" class="com.cjp.Instrumentalist">
        <property name="song" value="#{songSelector.selectSong(T(java.lang.Math).random())}"/>
    </bean>

    <!-- 进行数值计算 -->
    <bean id="circle" class="com.cjp.Circle">
        <property name="area" value="#{T(java.lang.Math).PI * 2 ^ 2}"/>
    </bean>

    <!-- 在SpEL中筛选集合 -->
    <util:list id="cities">
        <bean class="com.cjp.City"
              p:name="Chicago" p:state="IL" p:population="2853114"/>
        <bean class="com.cjp.City"
              p:name="Atlanta" p:state="GA" p:population="537958"/>
        <bean class="com.cjp.City"
              p:name="Dallas" p:state="TX" p:population="1279910"/>
        <bean class="com.cjp.City"
              p:name="Houston" p:state="TX" p:population="2242193"/>
        <bean class="com.cjp.City"
              p:name="Odessa" p:state="TX" p:population="90943"/>
        <bean class="com.cjp.City"
              p:name="EL Paso" p:state="TX" p:population="613190"/>
        <bean class="com.cjp.City"
              p:name="Jal" p:state="NM" p:population="1996"/>
        <bean class="com.cjp.City"
              p:name="Las cruces" p:state="NM" p:population="91865"/>
    </util:list>

    <!-- 访问集合成员 -->
    <bean id="cityGroup" class="com.cjp.Cities">
        <property name="cities">
            <list>
                <value>#{cities[0]}</value>
                <value>#{cities[T(java.lang.Math).random() * cities.size()]}</value>
                <value>#{cities.^[population gt 100000]}</value> <!-- 人口大于10万的城市中取第一个 -->
                <value>#{cities.$[population gt 100000]}</value> <!-- 人口大于10万的城市中取最后一个 -->
            </list>
        </property>
    </bean>

    <!-- 查询集合成员 -->
    <bean id="country" class="com.cjp.Country">
        <property name="cityNames" value="#{cities.![name]}"/> <!-- 投影集合 -->
        <property name="cities" value="#{cities.?[population gt 100000]}"/>
    </bean>

    <!-- 从配置文件中获取值 -->
    <util:properties id="settings" location="settings.properties"/>
    <bean id="book" class="com.cjp.Book">
        <property name="name" value="#{settings.name}"/>
    </bean>

    <!-- 获取系统属性 -->
    <bean id="config" class="com.cjp.Config">
        <property name="systemEnvironment" value="#{systemEnvironment}"/> <!-- 系统环境变量集合 -->
        <property name="systemProperties" value="#{systemProperties}"/> <!-- 系统属性集合 -->
        <property name="path" value="#{systemEnvironment['Path']}"/>
    </bean>
</beans>